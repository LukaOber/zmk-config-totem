//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <230>;
    quick-tap-ms = <0>;
    require-prior-idle-ms = <120>;
};

/ {
    combos {
        compatible = "zmk,combos";

        cr_y {
            bindings = <&kp Y>;
            key-positions = <16 17>;
            layers = <0>;
        };

        cr_b {
            bindings = <&kp B>;
            key-positions = <18 19>;
            layers = <0>;
        };

        cr_h {
            bindings = <&kp H>;
            key-positions = <27 28>;
            layers = <0>;
        };

        cr_l {
            bindings = <&kp L>;
            key-positions = <29 30>;
            layers = <0>;
        };

        cr_u {
            bindings = <&kp U>;
            key-positions = <28 29>;
            layers = <0>;
        };

        cr_p {
            bindings = <&kp P>;
            key-positions = <17 18>;
            layers = <0>;
        };

        cr_d {
            bindings = <&kp D>;
            key-positions = <27 30>;
            layers = <0>;
        };

        cr_g {
            bindings = <&kp G>;
            key-positions = <16 19>;
            layers = <0>;
        };

        cr_f {
            bindings = <&kp F>;
            key-positions = <16 18>;
            layers = <0>;
        };

        cr_z {
            bindings = <&kp Z>;
            key-positions = <19 17>;
            layers = <0>;
        };

        cr_c {
            bindings = <&kp C>;
            key-positions = <27 29>;
            layers = <0>;
        };

        cr_q {
            bindings = <&kp Q>;
            key-positions = <30 28>;
            layers = <0>;
        };

        cr_k {
            bindings = <&kp K>;
            key-positions = <16 29>;
            layers = <0>;
        };

        cr_x {
            bindings = <&kp X>;
            key-positions = <19 28>;
            layers = <0>;
        };

        cr_j {
            bindings = <&kp J>;
            key-positions = <30 17>;
            layers = <0>;
        };

        cr_v {
            bindings = <&kp V>;
            key-positions = <18 27>;
            layers = <0>;
        };

        cr_w {
            bindings = <&kp W>;
            key-positions = <16 30>;
            layers = <0>;
        };

        cr_m {
            bindings = <&kp M>;
            key-positions = <19 27>;
            layers = <0>;
        };

        cr_minus {
            bindings = <&kp MINUS>;
            key-positions = <17 29>;
            layers = <0>;
        };

        cr_slash {
            bindings = <&kp SLASH>;
            key-positions = <28 18>;
            layers = <0>;
        };

        cr_question {
            bindings = <&kp QUESTION>;
            key-positions = <16 28>;
            layers = <0>;
        };

        cr_semi {
            bindings = <&kp SEMICOLON>;
            key-positions = <19 29>;
            layers = <0>;
        };

        cr_apostrophe {
            bindings = <&kp APOSTROPHE>;
            key-positions = <30 18>;
            layers = <0>;
        };

        cr_comma {
            bindings = <&kp COMMA>;
            key-positions = <27 17>;
            layers = <0>;
        };

        cr_tab {
            bindings = <&kp TAB>;
            key-positions = <16 17 18>;
            layers = <0>;
        };

        cr_enter {
            bindings = <&kp ENTER>;
            key-positions = <27 28 29>;
            layers = <0>;
        };

        cl_y {
            bindings = <&kp Y>;
            key-positions = <13 12>;
        };

        cl_b {
            bindings = <&kp B>;
            key-positions = <10 11>;
        };

        cl_h {
            bindings = <&kp H>;
            key-positions = <24 23>;
        };

        cl_l {
            bindings = <&kp L>;
            key-positions = <21 22>;
        };

        cl_u {
            bindings = <&kp U>;
            key-positions = <23 22>;
        };

        cl_p {
            bindings = <&kp P>;
            key-positions = <11 12>;
        };

        cl_d {
            bindings = <&kp D>;
            key-positions = <24 21>;
        };

        cl_g {
            bindings = <&kp G>;
            key-positions = <10 13>;
        };

        cl_f {
            bindings = <&kp F>;
            key-positions = <13 11>;
        };

        cl_z {
            bindings = <&kp Z>;
            key-positions = <10 12>;
        };

        cl_c {
            bindings = <&kp C>;
            key-positions = <24 22>;
        };

        cl_q {
            bindings = <&kp Q>;
            key-positions = <21 23>;
        };

        cl_k {
            bindings = <&kp K>;
            key-positions = <22 13>;
        };

        cl_x {
            bindings = <&kp X>;
            key-positions = <10 23>;
        };

        cl_j {
            bindings = <&kp J>;
            key-positions = <21 12>;
        };

        cl_v {
            bindings = <&kp V>;
            key-positions = <24 11>;
        };

        cl_w {
            bindings = <&kp W>;
            key-positions = <21 13>;
        };

        cl_m {
            bindings = <&kp M>;
            key-positions = <10 24>;
        };

        cl_minus {
            bindings = <&kp MINUS>;
            key-positions = <22 12>;
        };

        cl_slash {
            bindings = <&kp SLASH>;
            key-positions = <23 11>;
        };

        cl_question {
            bindings = <&kp QUESTION>;
            key-positions = <13 23>;
        };

        cl_semi {
            bindings = <&kp SEMICOLON>;
            key-positions = <10 22>;
        };

        cl_apostrophe {
            bindings = <&kp APOSTROPHE>;
            key-positions = <21 11>;
        };

        cl_comma {
            bindings = <&kp COMMA>;
            key-positions = <24 12>;
        };

        cl_tab {
            bindings = <&kp TAB>;
            key-positions = <13 12 11>;
        };

        cl_enter {
            bindings = <&kp ENTER>;
            key-positions = <24 23 22>;
        };
    };

    behaviors {
        sel_bt0: sel_bt0 {
            compatible = "zmk,behavior-mod-morph";
            label = "SEL_BT0";
            bindings = <&none>, <&bt BT_SEL 0>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        sel_bt1: sel_bt1 {
            compatible = "zmk,behavior-mod-morph";
            label = "SEL_BT1";
            bindings = <&none>, <&bt BT_SEL 1>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        sel_bt2: sel_bt2 {
            compatible = "zmk,behavior-mod-morph";
            label = "SEL_BT2";
            bindings = <&none>, <&bt BT_SEL 2>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        dc_bt0: dc_bt0 {
            compatible = "zmk,behavior-mod-morph";
            label = "DC_BT0";
            bindings = <&none>, <&bt BT_DISC 0>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT)>;
        };

        dc_bt1: dc_bt1 {
            compatible = "zmk,behavior-mod-morph";
            label = "DC_BT1";
            bindings = <&none>, <&bt BT_DISC 1>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT)>;
        };

        dc_bt2: dc_bt2 {
            compatible = "zmk,behavior-mod-morph";
            label = "DC_BT2";
            bindings = <&none>, <&bt BT_DISC 2>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT)>;
        };

        cl_bt: cl_bt {
            compatible = "zmk,behavior-mod-morph";
            label = "CL_BT";
            bindings = <&none>, <&bt BT_CLR>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT)>;
        };

        sel_bt3: sel_bt3 {
            compatible = "zmk,behavior-mod-morph";
            label = "SEL_BT3";
            bindings = <&none>, <&bt BT_SEL 2>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        dc_bt3: dc_bt3 {
            compatible = "zmk,behavior-mod-morph";
            label = "DC_BT3";
            bindings = <&none>, <&bt BT_DISC 2>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT)>;
        };

        goto_3: goto_3 {
            compatible = "zmk,behavior-mod-morph";
            label = "GOTO_3";
            bindings = <&none>, <&bt BT_SEL 3>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        cl_all_bt: cl_all_bt {
            compatible = "zmk,behavior-mod-morph";
            label = "CL_ALL_BT";
            bindings = <&none>, <&bt BT_CLR_ALL>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
       &none  &none  &bt BT_DISC 0  &bt BT_SEL 0  &bt BT_CLR_ALL    &none          &none      &none  &none  &none
       &kp R  &kp S  &kp N          &kp I         &none             &none          &kp I      &kp N  &kp S  &kp R
&none  &kp A  &kp O  &kp T          &kp E         &none             &none          &kp E      &kp T  &kp O  &kp A  &none
                     &none          &kp SPACE     &kp BACKSPACE     &kp BACKSPACE  &kp SPACE  &none
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        inner_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "SYM";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃           ┃           ┃     UP    ┃           ┃     {     ┃   ┃     }     ┃     7     ┃     8     ┃     9     ┃     +     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃   SHIFT   ┃   LEFT    ┃    DOWN   ┃   RIGHT   ┃     [     ┃   ┃     ]     ┃     4     ┃     5     ┃     6     ┃     -     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃           ┃   P UP    ┃  C LOCK   ┃  P DOWN   ┃     (     ┃   ┃     )     ┃     1     ┃     2     ┃     3     ┃     *     ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃    TAB    ┃    SPC    ┃   ┃    DEL    ┃     0     ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
        &kp PIPE  &kp AT        &kp HASH   &kp DOLLAR      &kp PERCENT      &none   &none             &none              &none     &none
        &kp TAB   &kp QUESTION  &kp MINUS  &kp UNDERSCORE  &kp SLASH        &none   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp ESC   &kp ENTER
&trans  &none     &none         &kp PLUS   &kp EXCL        &kp BACKSLASH    &none   &kp LPAR          &kp RPAR           &kp RBRC  &kp DEL    &none
                                &trans     &trans          &trans           &trans  &trans            &trans
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        nav_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "NAV";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     !     ┃     @     ┃     #     ┃     $     ┃     %     ┃   ┃     ˆ     ┃     &     ┃     Ü     ┃     '     ┃     "     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     Ä     ┃           ┃    SZ     ┃           ┃           ┃   ┃   MUTE    ┃   YEN     ┃   EURO    ┃  POUND    ┃     Ö     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃  EMAIL1   ┃  EMAIL2   ┃           ┃           ┃           ┃   ┃   VOL-    ┃   VOL+    ┃   LAST    ┃   NEXT    ┃     \     ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃    GIF    ┃    ADJ    ┃   ┃           ┃           ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
        &dc_bt0  &kp PG_DN  &kp UP    &kp PG_UP  &sel_bt0    &goto_3   &kp LC(TAB)  &kp K_BACK  &kp K_FORWARD  &kp LC(TAB)
        &dc_bt1  &kp LEFT   &kp DOWN  &kp RIGHT  &sel_bt1    &sel_bt3  &kp LEFT     &kp DOWN    &kp UP         &kp RIGHT
&trans  &dc_bt2  &cl_bt     &none     &none      &sel_bt2    &dc_bt3   &kp LCTRL    &none       &none          &none        &trans
                            &trans    &trans     &trans      &trans    &trans       &trans
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        num_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "NUM";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃   RESET   ┃ BT CLEAR  ┃  OUT TOG  ┃           ┃           ┃   ┃           ┃    F7     ┃    F8     ┃    F9     ┃    F12    ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃ BOOTLOAD  ┃ BT NEXT   ┃           ┃           ┃           ┃   ┃           ┃    F4     ┃    F5     ┃    F6     ┃    F11    ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃           ┃ BT PREV   ┃           ┃           ┃           ┃   ┃           ┃    F1     ┃    F2     ┃    F3     ┃    F10    ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃           ┃           ┃   ┃           ┃           ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
        &kp K_PLAY_PAUSE      &kp K_PREVIOUS   &kp K_NEXT    &kp K_MUTE       &kp KP_NUMLOCK    &cl_all_bt       &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS
        &kp KP_DIVIDE         &kp KP_ASTERISK  &kp COMMA     &kp DOT          &caps_word        &none            &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS
&trans  &kp C_BRIGHTNESS_DEC  &kp C_BRI_INC    &kp C_VOL_DN  &kp C_VOLUME_UP  &none             &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_N2        &kp KP_NUMBER_3  &kp KP_EQUAL  &trans
                                               &trans        &trans           &trans            &trans           &trans           &trans
            >;
        };

        game_layer {
            bindings = <
           &kp TAB         &kp Y  &none  &kp E  &kp I    &trans  &trans  &trans  &trans  &trans
           &kp N           &kp A  &kp W  &kp D  &kp T    &trans  &trans  &trans  &trans  &trans
&kp LCTRL  &kp LEFT_SHIFT  &kp X  &kp S  &kp C  &kp H    &trans  &trans  &trans  &trans  &trans  &trans
                                  &kp R  &kp O  &kp B    &trans  &trans  &trans
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        ThirdLayer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
